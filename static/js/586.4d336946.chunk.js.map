{"version":3,"file":"static/js/586.4d336946.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","redux/cars/carsSelectors.js","pages/Catalog/Catalog.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport '../../css/variables.css';\n\nexport const Form = styled(FormikForm)`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  gap: 18px;\n`;\n\nexport const Label = styled.label`\n  /* position: relative; */\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  /* width: 100%; */\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.28571; /* 128.571% */\n\n  color: var(--label-text-color);\n`;\n\nexport const Field = styled(FormikField)`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 14px 18px;\n  height: 48px;\n\n  border-radius: 14px;\n  border: none;\n  outline: none;\n\n  color: var(--primary-text-color);\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11111; /* 111.111% */\n\n  background-color: var(--input-background-color);\n`;\n\nexport const BrandField = styled(Field)`\n  width: 100%;\n  max-width: 224px;\n`;\n\nexport const PriceField = styled(Field)`\n  width: 100%;\n  max-width: 125px;\n`;\n\nexport const MileageFromField = styled(Field)`\n  padding: 14px 24px;\n\n  width: 160px;\n\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right: 1px solid var(--input-right-border-color);\n`;\n\nexport const MileageToField = styled(Field)`\n  padding: 14px 24px;\n\n  width: 160px;\n\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`;\n\nexport const MileageBox = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  position: absolute;\n  bottom: -30px;\n  max-width: 480px;\n  color: #c00000;\n`;\n","import { Formik } from 'formik';\nimport {\n  Form,\n  Label,\n  ErrorMessage,\n  BrandField,\n  PriceField,\n  MileageFromField,\n  MileageToField,\n  MileageBox,\n} from './SearchForm.styled';\nimport * as yup from 'yup';\nimport Button from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { clearFilter, setFilter } from 'redux/filter/filterSlice';\n\nconst schema = yup.object().shape({\n  carBrand: yup\n    .string()\n    .trim()\n    .max(15, 'Car brand should not exceed 15 characters.'),\n  pricePerOneHour: yup\n    .number()\n    .min(0, 'Price per hour must be positive or 0')\n    .max(9999, 'Price per hour should not exceed 9999')\n    .default(9999),\n  carMileageFrom: yup\n    .number()\n    .min(0, 'Mileage From must be positive or 0')\n    .max(999999, 'Mileage From should not exceed 999999')\n    .default(0),\n  carMileageTo: yup\n    .number()\n    .min(0, 'Mileage To must be positive or 0')\n    .max(999999, 'Mileage To should not exceed 999999')\n    .default(999999),\n});\n\nconst initialValues = {\n  carBrand: '',\n  pricePerOneHour: '',\n  carMileageFrom: '',\n  carMileageTo: '',\n};\n\nexport default function SearchForm() {\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = values => {\n    // Оновлюємо фільтр в Redux з введеними значеннями\n    dispatch(setFilter(values));\n  };\n\n  const handleResetFilter = ({ resetForm }) => {\n    // Скидаємо фільтр у початкові значення\n    dispatch(clearFilter(initialValues));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={(values, { setSubmitting }) => {\n        setSubmitting(true);\n        // submit form\n        handleFormSubmit(values);\n      }}\n    >\n      {({ isValid, dirty, isSubmitting }) => (\n        <Form autoComplete=\"off\">\n          <Label>\n            Car brand\n            <BrandField\n              type=\"text\"\n              name=\"carBrand\"\n              maxLength=\"15\"\n              placeholder=\"Enter the text\"\n            />\n            <ErrorMessage name=\"carBrand\" component=\"span\" />\n          </Label>\n          <Label>\n            Price/ 1 hour\n            <PriceField\n              type=\"number\"\n              name=\"pricePerOneHour\"\n              maxLength=\"4\"\n              placeholder=\"To $\"\n            />\n            <ErrorMessage name=\"pricePerOneHour\" component=\"span\" />\n          </Label>\n          <MileageBox>\n            <Label>\n              Car mileage / km\n              <MileageFromField\n                type=\"number\"\n                name=\"carMileageFrom\"\n                maxLength=\"6\"\n                placeholder=\"From\"\n              />\n              <ErrorMessage name=\"carMileageFrom\" component=\"span\" />\n            </Label>\n            <MileageToField\n              type=\"number\"\n              name=\"carMileageTo\"\n              maxLength=\"6\"\n              placeholder=\"To\"\n            />\n            <ErrorMessage name=\"carMileageTo\" component=\"span\" />\n          </MileageBox>\n          <Button\n            $searchButtonStyle\n            label=\"Search\"\n            type=\"submit\"\n            disabled={\n              !isValid || !dirty\n              // || isSubmitting\n            }\n          />\n          <Button\n            $searchButtonStyle\n            label=\"Reset\"\n            type=\"reset\"\n            onClick={handleResetFilter}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","export const selectCars = state => state.cars.cars;\n\nexport const selectIsLoading = state => state.cars.isLoading;\n\nexport const selectError = state => state.cars.error;\n","import { useEffect } from 'react';\nimport SearchForm from 'components/SearchForm';\nimport CarsList from 'components/CarsList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCars } from 'redux/cars/carsSelectors';\nimport { fetchAllCars } from 'redux/cars/carsOperations';\nimport SectionWrapper from 'components/SectionWrapper';\n\nexport default function Catalog() {\n  const dispatch = useDispatch();\n  const cars = useSelector(selectCars);\n\n  useEffect(() => {\n    dispatch(fetchAllCars());\n  }, [dispatch]);\n\n  return (\n    <SectionWrapper>\n      <SearchForm />\n      <CarsList carsArray={cars} />\n    </SectionWrapper>\n  );\n}\n"],"names":["Form","styled","FormikForm","Label","Field","FormikField","BrandField","PriceField","MileageFromField","MileageToField","MileageBox","ErrorMessage","FormikError","schema","yup","shape","carBrand","trim","max","pricePerOneHour","min","default","carMileageFrom","carMileageTo","initialValues","SearchForm","dispatch","useDispatch","handleResetFilter","resetForm","clearFilter","validationSchema","onSubmit","values","setSubmitting","setFilter","handleFormSubmit","isValid","dirty","isSubmitting","autoComplete","type","name","maxLength","placeholder","component","Button","$searchButtonStyle","label","disabled","onClick","selectCars","state","cars","Catalog","useSelector","useEffect","fetchAllCars","SectionWrapper","CarsList","carsArray"],"sourceRoot":""}